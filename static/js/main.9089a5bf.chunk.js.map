{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateState","update","setState","localStorage","setItem","JSON","stringify","addDeveloper","data","objectSpread","state","developers","push","id","Date","now","name","ppd","daysOff","updateDeveloper","developer","field","value","dev","find","de","updateDaysInSprint","e","daysInSprint","target","removeDeveloper","without","renderPointTotal","length","reduce","a","d","parseFloat","parse","getItem","_this2","react_default","createElement","style","margin","width","fontSize","display","marginLeft","marginBottom","marginRight","justifyContent","placeholder","type","onChange","cursor","onClick","map","dispay","flexDirection","border","padding","alignItems","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9089a5bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport without from 'lodash/without';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = JSON.parse(\n      localStorage.getItem('state') ||\n        JSON.stringify({\n          data: {\n            daysInSprint: 10,\n            developers: [],\n          },\n        }),\n    );\n  }\n\n  updateState = update => {\n    this.setState(update);\n\n    localStorage.setItem('state', JSON.stringify(update));\n  };\n\n  addDeveloper = () => {\n    const {data} = {...this.state};\n    data.developers.push({\n      id: Date.now(),\n      name: 'Foo',\n      ppd: 2,\n      daysOff: 0,\n    });\n\n    this.updateState({data});\n  };\n\n  updateDeveloper = (developer, field, value) => {\n    const {data} = {...this.state};\n    const dev = data.developers.find(de => developer.id === de.id);\n    if (dev) {\n      dev[field] = value;\n    }\n    this.updateState({data});\n  };\n\n  updateDaysInSprint = e => {\n    const {data} = {...this.state};\n    data.daysInSprint = e.target.value;\n    this.updateState({data});\n  };\n\n  removeDeveloper = developer => {\n    const {data} = {...this.state};\n    const developers = without(data.developers, developer);\n    data.developers = developers;\n    this.updateState({data});\n  };\n\n  renderPointTotal = () => {\n    const {data} = this.state;\n    const {daysInSprint, developers} = data;\n    if (!developers.length) return 0;\n\n    return developers.reduce((a, d) => a + (daysInSprint - d.daysOff) * parseFloat(d.ppd), 0);\n  };\n\n  render() {\n    return (\n      <div style={{margin: 'auto', width: 600, fontSize: '14px'}}>\n        <div>\n          <h3 style={{display: 'flex'}}>\n            <div>Adjusted Point Total</div>\n            <div style={{marginLeft: '10px'}}>{this.renderPointTotal()}</div>\n          </h3>\n        </div>\n\n        <div\n          style={{\n            display: 'flex',\n            marginBottom: '5px',\n            marginRight: '5px',\n            justifyContent: 'space-between',\n            width: '375px',\n          }}\n        >\n          <div>Number of Days in sprint</div>\n          <input\n            placeholder=\"Days In Sprint\"\n            value={this.state.data.daysInSprint}\n            type=\"number\"\n            onChange={this.updateDaysInSprint}\n          />\n        </div>\n        <div>\n          <h3 style={{cursor: 'pointer'}} onClick={this.addDeveloper}>\n            Add Developer\n          </h3>\n          {this.state.data.developers.map(d => (\n            <div style={{display: 'flex', marginBottom: '5px'}}>\n              <div\n                style={{\n                  dispay: 'flex',\n                  flexDirection: 'column',\n                  border: '1px solid #eee',\n                  padding: '5px',\n                  marginRight: '10px',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <div\n                  style={{\n                    display: 'flex',\n                    marginBottom: '5px',\n                    marginRight: '5px',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <div>Name</div>\n                  <input\n                    value={d.name}\n                    onChange={e => this.updateDeveloper(d, 'name', e.target.value)}\n                  />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    marginBottom: '5px',\n                    marginRight: '5px',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <div>Adjusted Points Per Day</div>\n                  <input\n                    type=\"number\"\n                    value={d.ppd}\n                    onChange={e => this.updateDeveloper(d, 'ppd', e.target.value)}\n                  />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    marginBottom: '5px',\n                    marginRight: '5px',\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  <div>Days Off</div>\n                  <input\n                    type=\"number\"\n                    value={d.daysOff}\n                    onChange={e => this.updateDeveloper(d, 'daysOff', e.target.value)}\n                  />\n                </div>\n              </div>\n\n              <div style={{cursor: 'pointer'}} onClick={() => this.removeDeveloper(d)}>\n                Remove\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}